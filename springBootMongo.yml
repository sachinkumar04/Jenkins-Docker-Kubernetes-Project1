# Config Map
apiVersion: v1
kind: ConfigMap
metadata:
  name: springapp-configmap
data:
  username: springapp
  password: mongodb@123
---
# Replication Controller for springapp
apiVersion: v1
kind: ReplicationController
metadata:
  name: spring-controller
spec:
  replicas: 1
  selector:
    app: springboot
  template:
    metadata:
      labels:
        app: springboot
    spec:
      containers:
      - image: sachinkumar04/jenkins-docker-k8s-project:tagversion
        name: springboot
        ports:
        - containerPort: 8080  
        env:
        - name: MONGO_DB_HOSTNAME
          value: mongo
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            configMapKeyRef:
              name: springapp-configmap
              key: username 
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            configMapKeyRef:
              name: springapp-configmap
              key: password       
---
# Service for Spring Boot Application
apiVersion: v1
kind: Service
metadata:
  name: springboot
spec:
  selector:
    app: springboot
  ports:
    - port: 8080
      targetPort: 8080
  type: ClusterIP

  
---  
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-app-ingress
  namespace: default
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod  # Referencing the cluster-wide issuer
    nginx.ingress.kubernetes.io/ssl-redirect: "true"   # Force redirect HTTP to HTTPS
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"  # Force SSL
spec:
  rules:
  - host: my-app.example.com  # Replace with your domain
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: my-app-service  # Replace with your service name
            port:
              number: 80
  tls:
  - hosts:
    - my-app.example.com  # The same host as in the rules
    secretName: my-app-tls  # The name of the secret where the TLS cert will be stored

---
# Mongo RC with host path Volume
apiVersion: v1
kind: ReplicationController
metadata:
  name: mongo-controller
spec:
  replicas: 1
  selector:
    app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
      - image: mongo
        name: mongo
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            configMapKeyRef:
              name: springapp-configmap
              key: username 
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            configMapKeyRef:
              name: springapp-configmap
              key: password 
        ports:
        - containerPort: 27017
        volumeMounts:
        - name: mongo-persistent-storage
          mountPath: /data/db
      volumes:
      - name: mongo-persistent-storage
        hostPath:
         path: /tmp/dbbackup
---
# Mongo Service
apiVersion: v1
kind: Service
metadata:
  name: mongo
spec:
  type: ClusterIP
  ports:
  - port: 27017
    targetPort: 27017
  selector:
    app: mongo
